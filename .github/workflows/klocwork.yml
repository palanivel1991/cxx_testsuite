name: Build and Test BACnet Stack

on:      
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  klocwork:
    runs-on: self-hosted

    name: Run Klocwork Analysis

    env:
      KW_URL: http://192.168.0.127:8082
      KW_PROJECT: Demo
      KW_USER: ${{ secrets.KW_USER }}
      KW_PASS: ${{ secrets.KW_PASS }}
      KW_REPORT_NAME: cxx_testsuite_report
      KW_REPORT_DIR: reports
      KLOCWORK_LTOKEN: C:\Users\palan\.klocwork\ltoken
      KLOCWORK_BIN: D:\kw_cmd_24.4\bin

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Print current user
        shell: cmd
        run: whoami

      - name: Test connectivity to Klocwork server
        shell: cmd
        run: curl.exe -v %KW_URL%

      - name: Validate required secrets
        shell: cmd
        run: |
          if "%KW_USER%"=="" (
            echo ❌ KW_USER is empty. Check GitHub Secrets configuration.
            exit /b 1
          )
          if "%KW_PASS%"=="" (
            echo ❌ KW_PASS is empty. Check GitHub Secrets configuration.
            exit /b 1
          )
          echo ✅ Secrets are set. Proceeding...

      - name: Setup .kwauth file
        shell: cmd
        run: |
          setlocal EnableDelayedExpansion
          set KWAUTH_DIR=%USERPROFILE%\.klocwork

          if exist "!KWAUTH_DIR!" rmdir /s /q "!KWAUTH_DIR!"
          mkdir "!KWAUTH_DIR!"

          > "!KWAUTH_DIR!\.kwauth" echo {
          >> "!KWAUTH_DIR!\.kwauth" echo   "users": [
          >> "!KWAUTH_DIR!\.kwauth" echo     {
          >> "!KWAUTH_DIR!\.kwauth" echo       "url": "%KW_URL%",
          >> "!KWAUTH_DIR!\.kwauth" echo       "user": "%KW_USER%",
          >> "!KWAUTH_DIR!\.kwauth" echo       "password": "%KW_PASS%"
          >> "!KWAUTH_DIR!\.kwauth" echo     }
          >> "!KWAUTH_DIR!\.kwauth" echo   ]
          >> "!KWAUTH_DIR!\.kwauth" echo }

          echo ✅ .kwauth file created at !KWAUTH_DIR!\.kwauth

      - name: Clean previous Klocwork state
        shell: cmd
        run: |
          if exist "%GITHUB_WORKSPACE%\.kwps" rmdir /s /q "%GITHUB_WORKSPACE%\.kwps"
          if exist "%GITHUB_WORKSPACE%\Build" rmdir /s /q "%GITHUB_WORKSPACE%\Build"

      - name: Run Klocwork CLI analysis
        shell: cmd
        run: |
          set PATH=%PATH%;%KLOCWORK_BIN%
          cd /d %GITHUB_WORKSPACE%

          echo Cleaning previous build...
          if exist .kwlp rmdir /s /q .kwlp
          if exist .kwps rmdir /s /q .kwps
          if exist Build rmdir /s /q Build
          if exist kwinject.out del /f /q kwinject.out
          if exist %KW_REPORT_NAME%.txt del /f /q %KW_REPORT_NAME%.txt
          if exist %KW_REPORT_NAME%.pdf del /f /q %KW_REPORT_NAME%.pdf
          if exist %KW_REPORT_DIR% rmdir /s /q %KW_REPORT_DIR%

          echo Starting build with kwinject...
          mkdir Build
          cd Build
          cmake ..
          "%KLOCWORK_BIN%\kwinject.exe" make

          echo Running Klocwork static analysis...
          cd /d %GITHUB_WORKSPACE%

          "%KLOCWORK_BIN%\kwcheck.exe" create --url %KW_URL%/%KW_PROJECT%
          "%KLOCWORK_BIN%\kwcheck.exe" set license.host=192.168.0.127 license.port=27000
          "%KLOCWORK_BIN%\kwcheck.exe" run -pd .kwlp -b kwinject.out
          "%KLOCWORK_BIN%\kwcheck.exe" list -y -l -F detailed -pd .kwlp > "%KW_REPORT_NAME%.txt"
